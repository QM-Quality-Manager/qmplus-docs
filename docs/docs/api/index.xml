<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Api on</title><link>https://qm-quality-manager.github.io/qmplus-docs/docs/api/</link><description>Recent content in Api on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:48:45 +0000</lastBuildDate><atom:link href="https://qm-quality-manager.github.io/qmplus-docs/docs/api/index.xml" rel="self" type="application/rss+xml"/><item><title>Activity</title><link>https://qm-quality-manager.github.io/qmplus-docs/docs/api/activity/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://qm-quality-manager.github.io/qmplus-docs/docs/api/activity/</guid><description>Overview This section covers operating on Activities in qmplus.
The relevant swagger information is located at.
Swagger Calendar API
Creating Basic Activities The activity operation are more complex than the Calendar operation as there are a lot of options. In this section we will outline the options and show how you can create a couple of different activies as well as explain an activity tree structure.
Single Activity Lets look at how we can create a basic activity with a single date entry.</description></item><item><title>Calendar</title><link>https://qm-quality-manager.github.io/qmplus-docs/docs/api/calendar/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://qm-quality-manager.github.io/qmplus-docs/docs/api/calendar/</guid><description>Overview This section covers operating on Calendar objects and their associated Activities in qmplus. A tenant can have multiple calender entries.
The relevant swagger information is located at.
Swagger Calendar API
Calendar Operations The calendar is the top level object used for handling activities. There can be one or more Calendar objects for a tenant and they can be placed on different departments and can be inherited by child departments.</description></item><item><title>Case</title><link>https://qm-quality-manager.github.io/qmplus-docs/docs/api/case/case/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://qm-quality-manager.github.io/qmplus-docs/docs/api/case/case/</guid><description>Overview In this chapter we will look at how we can retrieve the case, modify it and also retrieve history. Its important to understand that a case is associated with an entity and workflow. The types of entities supported are.
Entity Description MESSAGE A case attached to a specific registered message ACTION A case representing an Action to resolve one or more messages DOCUMENT A case representing a document and its associated process AUDIT A case representing an audit process of one or more documents HEARING A case representing a hearing process for a given document Cases are created when they are associated to an entity.</description></item><item><title>Dialog</title><link>https://qm-quality-manager.github.io/qmplus-docs/docs/api/case/dialog/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://qm-quality-manager.github.io/qmplus-docs/docs/api/case/dialog/</guid><description/></item><item><title>Transition</title><link>https://qm-quality-manager.github.io/qmplus-docs/docs/api/case/transition/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://qm-quality-manager.github.io/qmplus-docs/docs/api/case/transition/</guid><description>In this section we will cover performing transitions for a case using the API.
Transitioning Between states with no Dialog In this example we will show to trigger a transition for a specific message going from one state to another where there is no dialog associated with the transition. Lets say if you for example are modeling a Kanban style process where you can freely move a case between states.</description></item></channel></rss>